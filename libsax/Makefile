#############################################################################
# Makefile for building: libsax.so.7.3.0
# Generated by qmake (2.01a) (Qt 4.2.1) on: Wed Feb 6 09:14:43 2008
# Project:  sax.pro
# Template: lib
# Command: /usr/bin/qmake -unix -o Makefile sax.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
LEX           = flex
YACC          = yacc
DEFINES       = -DQT_NO_DEBUG -DQT_QT3SUPPORT_LIB -DQT3_SUPPORT -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT -fPIC  $(DEFINES)
CXXFLAGS      = -pipe $(RPM_OPT_FLAGS) -rdynamic -DPIC -g -O2 -Wall -W -D_REENTRANT -fPIC  $(DEFINES)
LEXFLAGS      = 
YACCFLAGS     = -d
INCPATH       = -I/usr/share/qt4/mkspecs/default -I. -I/usr/include/QtCore -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtGui -I/usr/include/Qt3Support -I/usr/include/Qt3Support -I/usr/include -I-iquote -I/usr/X11R6/include -I-iquote -I/usr/include/xorg -I-I. -I/usr/include/X11 -I. -I.
LINK          = g++
LFLAGS        = -shared -Wl,-soname,libsax.so.7
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib64 -L/usr/X11R6/lib -lxkbfile -lxf86config -lQt3Support -L/usr/lib -lQtSql -lQtXml -lQtNetwork -lQtGui -lpng -lSM -lICE -lXi -lXrender -lXrandr -lXfixes -lXcursor -lXinerama -lfreetype -lfontconfig -lXext -lX11 -lQtCore -lz -lm -ldl -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = storage.cpp \
		import.cpp \
		process.cpp \
		export.cpp \
		config.cpp \
		exception.cpp \
		init.cpp \
		desktop.cpp \
		extensions.cpp \
		card.cpp \
		keyboard.cpp \
		path.cpp \
		pointers.cpp \
		layout.cpp \
		device.cpp \
		file.cpp \
		interface.cpp \
		processcall.cpp moc_exception.cpp
OBJECTS       = storage.o \
		import.o \
		process.o \
		export.o \
		config.o \
		exception.o \
		init.o \
		desktop.o \
		extensions.o \
		card.o \
		keyboard.o \
		path.o \
		pointers.o \
		layout.o \
		device.o \
		file.o \
		interface.o \
		processcall.o \
		moc_exception.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		sax.pro
QMAKE_TARGET  = sax
DESTDIR       = 
TARGET        = libsax.so.7.3.0
TARGETA       = libsax.a
TARGETD       = libsax.so.7.3.0
TARGET0       = libsax.so
TARGET1       = libsax.so.7
TARGET2       = libsax.so.7.3

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  $(TARGET)

$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)



staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

Makefile: sax.pro  /usr/share/qt4/mkspecs/default/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/lib/libQt3Support.prl \
		/usr/lib/libQtSql.prl \
		/usr/lib/libQtCore.prl \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl
	$(QMAKE) -unix -o Makefile sax.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/lib/libQt3Support.prl:
/usr/lib/libQtSql.prl:
/usr/lib/libQtCore.prl:
/usr/lib/libQtXml.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile sax.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/sax7.3 || $(MKDIR) .tmp/sax7.3 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/sax7.3/ && $(COPY_FILE) --parents storage.h import.h process.h export.h config.h exception.h sax.h init.h desktop.h extensions.h card.h keyboard.h path.h pointers.h layout.h device.h file.h interface.h processcall.h .tmp/sax7.3/ && $(COPY_FILE) --parents storage.cpp import.cpp process.cpp export.cpp config.cpp exception.cpp init.cpp desktop.cpp extensions.cpp card.cpp keyboard.cpp path.cpp pointers.cpp layout.cpp device.cpp file.cpp interface.cpp processcall.cpp .tmp/sax7.3/ && (cd `dirname .tmp/sax7.3` && $(TAR) sax7.3.tar sax7.3 && $(COMPRESS) sax7.3.tar) && $(MOVE) `dirname .tmp/sax7.3`/sax7.3.tar.gz . && $(DEL_FILE) -r .tmp/sax7.3


yaccclean:
lexclean:
clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile


/usr/bin/moc:
	(cd $(QTDIR)/src/tools/moc && $(MAKE))

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_exception.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_exception.cpp
moc_exception.cpp: exception.h \
		/usr/bin/moc
	/usr/bin/moc $(DEFINES) $(INCPATH) exception.h -o moc_exception.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_image_collection_clean compiler_moc_source_clean compiler_uic_clean 

####### Compile

storage.o: storage.cpp storage.h \
		exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o storage.o storage.cpp

import.o: import.cpp import.h \
		storage.h \
		exception.h \
		process.h \
		processcall.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o import.o import.cpp

process.o: process.cpp process.h \
		storage.h \
		exception.h \
		processcall.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o process.o process.cpp

export.o: export.cpp export.h \
		import.h \
		storage.h \
		exception.h \
		process.h \
		processcall.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o export.o export.cpp

config.o: config.cpp config.h \
		export.h \
		import.h \
		storage.h \
		exception.h \
		process.h \
		processcall.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o config.o config.cpp

exception.o: exception.cpp exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o exception.o exception.cpp

init.o: init.cpp init.h \
		processcall.h \
		exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o init.o init.cpp

desktop.o: desktop.cpp desktop.h \
		import.h \
		storage.h \
		exception.h \
		process.h \
		processcall.h \
		card.h \
		path.h \
		file.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o desktop.o desktop.cpp

extensions.o: extensions.cpp extensions.h \
		import.h \
		storage.h \
		exception.h \
		process.h \
		processcall.h \
		device.h \
		pointers.h \
		keyboard.h \
		card.h \
		path.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o extensions.o extensions.cpp

card.o: card.cpp card.h \
		import.h \
		storage.h \
		exception.h \
		process.h \
		processcall.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o card.o card.cpp

keyboard.o: keyboard.cpp keyboard.h \
		import.h \
		storage.h \
		exception.h \
		process.h \
		processcall.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o keyboard.o keyboard.cpp

path.o: path.cpp path.h \
		import.h \
		storage.h \
		exception.h \
		process.h \
		processcall.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o path.o path.cpp

pointers.o: pointers.cpp pointers.h \
		import.h \
		storage.h \
		exception.h \
		process.h \
		processcall.h \
		device.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pointers.o pointers.cpp

layout.o: layout.cpp layout.h \
		import.h \
		storage.h \
		exception.h \
		process.h \
		processcall.h \
		card.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o layout.o layout.cpp

device.o: device.cpp device.h \
		import.h \
		storage.h \
		exception.h \
		process.h \
		processcall.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o device.o device.cpp

file.o: file.cpp file.h \
		exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o file.o file.cpp

interface.o: interface.cpp interface.h \
		sax.h \
		storage.h \
		exception.h \
		export.h \
		import.h \
		process.h \
		processcall.h \
		init.h \
		config.h \
		keyboard.h \
		pointers.h \
		device.h \
		desktop.h \
		card.h \
		path.h \
		file.h \
		extensions.h \
		layout.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o interface.o interface.cpp

processcall.o: processcall.cpp processcall.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o processcall.o processcall.cpp

moc_exception.o: moc_exception.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_exception.o moc_exception.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

